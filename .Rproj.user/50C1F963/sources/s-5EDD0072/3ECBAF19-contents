df <- read.csv("Dataset1.txt")

library(lubridate)
library(ggplot2)
library(depmixS4)
set.seed(1)

summary(df)
df$Day_of_week <- weekdays(as.Date(df$Date, "%d/%m/%Y"))

df$Date <- as.Date(df$Date, "%d/%m/%Y")

df$Day_of_week <- weekdays(df$Date, FALSE)


data_cor <- cor(df[3:6], method="pearson", use="complete.obs")
print(data_cor)


sundays <- df[df$Day_of_week == "Sunday",]

##split sundays into mornings and evenings
sunday_mornings <- sundays[hour(hms(sundays$Time)) >= 8 & hour(hms(sundays$Time)) < 11,]
sunday_evenings <- sundays[hour(hms(sundays$Time)) >= 21 & (hour(hms(sundays$Time)) <= 23 & 
                                                              minute(hms(sundays$Time)) <= 59 &
                                                              second(hms(sundays$Time)) <= 59),]



## Remove rows that have null fields
sunday_mornings <- sunday_mornings[rowSums(is.na(sunday_mornings)) == 0,]
sunday_evenings <- sunday_evenings[rowSums(is.na(sunday_evenings)) == 0,]

##sort the sunday data by time and then group and average them

sortedSundayMornings <- sunday_mornings[order(sunday_mornings$Time),] 
print(sortedSundayMornings)

sortedSundayEvenings <- sunday_evenings[order(sunday_evenings$Time),] 
print(sortedSundayMornings)

meanSundayMornings <- colMeans(matrix(sortedSundayMornings$Global_active_power, nrow=51))

meanSundayEvenings <- colMeans(matrix(sortedSundayEvenings$Global_active_power, nrow=51))

print(meanSundayMornings)
print(meanSundayEvenings)

set.seed(1)

mod1 <- depmix(response = Global_active_power ~ 1 , data = sunday_mornings, nstates = 25, ntimes=rep(180,51))
fm1 <- fit(mod1)

mod2 <- depmix(response = Global_active_power ~ 1 , data = sunday_mornings, nstates = 18, ntimes=rep(180,51))
fm2 <- fit(mod2)

mod3 <- depmix(response = Global_active_power ~ 1 , data = sunday_mornings, nstates = 19, ntimes=rep(180,51))
fm3 <- fit(mod3)

print(fm1)

print(fm2)

print(fm3)

testMod <- depmix(response = Global_active_power~1, sunday_mornings, nstates=17,
                  ntimes=rep(180, 51))
fitTest <- fit(testMod)
print(fitTest)


testMod2 <- depmix(response=Global_active_power~1, sunday_mornings, nstates=10,
                   ntimes=rep(180, 51))
fitTest2 <- fit(testMod2)
print(fitTest2)

set.seed(1)

mod1 <- depmix(response = Global_active_power ~ 1 , data = sunday_evenings, nstates = 19, ntimes= rep(180, 51))
fm1 <- fit(mod1)

mod2 <- depmix(response = Global_active_power ~ 1 , data = sunday_evenings, nstates = 20, ntimes= rep(180, 51))
fm2 <- fit(mod2)

mod3 <- depmix(response = Global_active_power ~ 1 , data = sunday_evenings, nstates = 22, ntimes= rep(180, 51))
fm3 <- fit(mod3)

print(fm1)

print(fm2)

print(fm3)


"Q3 mornings"
Time <- seq(1,180,1)
Global_Active_Power <- meanSundayMornings[1:180]
plot(Time,Global_Active_Power, type="p", main="Sunday Mornings")


ggplot()+
  layer(data = sunday_mornings, mapping = aes(x=Time, y=Global_active_power), geom = "point",stat="identity", position = position_identity()) +
  coord_cartesian() +
  scale_x_discrete() +
  scale_y_discrete() +
  scale_color_hue()

ggplot()+
  layer(data = sunday_evenings, mapping = aes(x=Global_intensity, y=Time), geom = "point",stat="identity", position = position_identity()) +
  coord_cartesian() +
  scale_x_discrete() +
  scale_y_discrete() +
  scale_color_hue()

"Q3 evenings"
Time2 <- seq(1,180,1)
Global_Active_Power2 <- meanSundayEvenings[1:180]
plot(Time,Global_Active_Power2, type="p", main="Sunday Evenings")

## Question 3 (b)

### Week

# Statistical measurements of Global Active Power for Sunday mornings
min(sunday_mornings$Global_active_power)
max(sunday_mornings$Global_active_power)
mean(sunday_mornings$Global_active_power)
sd(sunday_mornings$Global_active_power)

# Statistical measurements of Global Active Power for Sunday evenings
min(sunday_evenings$Global_active_power)
max(sunday_evenings$Global_active_power)
mean(sunday_evenings$Global_active_power)
sd(sunday_evenings$Global_active_power)

### Month

plot(aggregate(sunday_mornings$Global_active_power, by=list(month(sunday_mornings$Date)), mean), ylab="Mean of Global Active Power", xlab="Month", type="b", main="Sunday Mornings: Mean GAP of each month", asp=1)
plot(aggregate(sunday_mornings$Global_active_power, by=list(month(sunday_mornings$Date)), max), ylab="Max of Global Active Power", xlab="Month", type="b", main="Sunday Mornings: Max GAP of each month", asp=1)
plot(aggregate(sunday_mornings$Global_active_power, by=list(month(sunday_mornings$Date)), min), ylab="Min of Global Active Power", xlab="Month", type="b", main="Sunday Mornings: Min GAP of each month", asp=1)
plot(aggregate(sunday_mornings$Global_active_power, by=list(month(sunday_mornings$Date)), sd), ylab="Standard Deviation of Global Active Power", xlab="Month", main="Sunday Mornings: SD of GAP vs. Month", type="b", asp=1)

plot(aggregate(sunday_evenings$Global_active_power, by=list(month(sunday_evenings$Date)), mean), ylab="Mean of Global Active Power", xlab="Month", main="Sunday Evenings: Mean GAP of each Month", type="b", asp=1)
plot(aggregate(sunday_evenings$Global_active_power, by=list(month(sunday_evenings$Date)), max), ylab="Max GAP", xlab="Month", main="Max GAP of each month", asp=1, type="b")
plot(aggregate(sunday_evenings$Global_active_power, by=list(month(sunday_evenings$Date)), min), ylab="Min GAP of each month", xlab="Month", main="Min GAP of each month", asp=1, type="b")
plot(aggregate(sunday_evenings$Global_active_power, by=list(month(sunday_evenings$Date)), sd), ylab="SD GAP of each Month", xlab="Month", main="SD GAP of each month", asp=1, type="b")



### Season

# Subset Sunday mornings data frames into seasons
winter_sunday_mornings <- subset(sunday_mornings, month(sunday_mornings$Date) %in% c(12, 1, 2))
spring_sunday_mornings <- subset(sunday_mornings, month(sunday_mornings$Date) %in% c(3, 4, 5))
summer_sunday_mornings <- subset(sunday_mornings, month(sunday_mornings$Date) %in% c(6, 7, 8))
fall_sunday_mornings <- subset(sunday_mornings, month(sunday_mornings$Date) %in% c(9, 10, 11))

winter_morning_stats <- c(min(winter_sunday_mornings$Global_active_power),
max(winter_sunday_mornings$Global_active_power),
mean(winter_sunday_mornings$Global_active_power),
sd(winter_sunday_mornings$Global_active_power))
names(winter_morning_stats) <- c("Min", "Max", "Mean", "SD")
winter_morning_stats

spring_morning_stats <-  c(min(spring_sunday_mornings$Global_active_power),
max(spring_sunday_mornings$Global_active_power),
mean(spring_sunday_mornings$Global_active_power),
sd(spring_sunday_mornings$Global_active_power))
names(spring_morning_stats) <- c("Min", "Max", "Mean", "SD"); spring_morning_stats

summer_morning_stats <- c(min(summer_sunday_mornings$Global_active_power),
max(summer_sunday_mornings$Global_active_power),
mean(summer_sunday_mornings$Global_active_power),
sd(summer_sunday_mornings$Global_active_power))
names(summer_morning_stats) <- c("Min", "Max", "Mean", "SD"); summer_morning_stats

fall_morning_stats <- c(min(fall_sunday_mornings$Global_active_power),
max(fall_sunday_mornings$Global_active_power),
mean(fall_sunday_mornings$Global_active_power),
sd(fall_sunday_mornings$Global_active_power))
names(fall_morning_stats) <- c("Min", "Max", "Mean", "SD"); fall_morning_stats


# Subset Sunday evenings data set into seasons
winter_sunday_evenings <- subset(sunday_evenings, month(sunday_evenings$Date) %in% c(12, 1, 2))
spring_sunday_evenings <- subset(sunday_evenings, month(sunday_evenings$Date) %in% c(3, 4, 5))
summer_sunday_evenings <- subset(sunday_evenings, month(sunday_evenings$Date) %in% c(6, 7, 8))
fall_sunday_evenings <- subset(sunday_evenings, month(sunday_evenings$Date) %in% c(9, 10, 11))

winter_evening_stats <- c(min(winter_sunday_evenings$Global_active_power),
max(winter_sunday_evenings$Global_active_power),
mean(winter_sunday_evenings$Global_active_power),
sd(winter_sunday_evenings$Global_active_power))
names(winter_evening_stats) <- c("Min", "Max", "Mean", "SD"); winter_evening_stats

spring_evening_stats <-  c(min(spring_sunday_evenings$Global_active_power),
max(spring_sunday_evenings$Global_active_power),
mean(spring_sunday_evenings$Global_active_power),
sd(spring_sunday_evenings$Global_active_power))
names(spring_evening_stats) <- c("Min", "Max", "Mean", "SD"); spring_evening_stats

summer_evening_stats <- c(min(summer_sunday_evenings$Global_active_power),
max(summer_sunday_evenings$Global_active_power),
mean(summer_sunday_evenings$Global_active_power),
sd(summer_sunday_evenings$Global_active_power))
names(summer_evening_stats) <- c("Min", "Max", "Mean", "SD"); summer_evening_stats

fall_evening_stats <- c(min(fall_sunday_evenings$Global_active_power),
max(fall_sunday_evenings$Global_active_power),
mean(fall_sunday_evenings$Global_active_power),
sd(fall_sunday_evenings$Global_active_power))
names(fall_evening_stats) <- c("Min", "Max", "Mean", "SD"); fall_evening_stats



